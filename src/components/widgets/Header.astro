---
import { Icon } from 'astro-icon/components';
import Logo from '~/components/Logo.astro';
import ToggleTheme from '~/components/common/ToggleTheme.astro';
import ToggleMenu from '~/components/common/ToggleMenu.astro';
import Button from '~/components/ui/Button.astro';
import Image from '~/components/common/Image.astro';
import Search from 'astro-pagefind/components/Search';
import { getHomePermalink } from '~/utils/permalinks';
import { trimSlash, getAsset } from '~/utils/permalinks';
import type { CallToAction } from '~/types';
import logoImage from '~/assets/images/IF-logo.svg';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface ActionLink extends CallToAction {}

interface MenuLink extends Link {
  links?: Array<MenuLink>;
}

export interface Props {
  id?: string;
  links?: Array<MenuLink>;
  actions?: Array<ActionLink>;
  isSticky?: boolean;
  isDark?: boolean;
  isFullWidth?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  position?: string;
}

const {
  id = 'header',
  links = [],
  actions = [],
  isSticky = false,
  isDark = false,
  isFullWidth = false,
  showToggleTheme = false,
  showRssFeed = false,
  position = 'center',
} = Astro.props;

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
---

<div class="searchb" id="searchbox">
  <div class="divsearch fixed z-[100] top-8 left-0 w-5/6 right-0 m-auto overflow-auto">
    <Search
      id="search"
      className="pagefind-ui bg-white outline-0 rounded-md p-4 border-0  h-full"
      uiOptions={{ showImages: false }}
    />
  </div>
  <div class="dropshadow z-50 fixed top-0 left-0 right-0 bottom-0 h-full w-full"></div>
  <div class="closebtn fixed top-6 right-4 z-50 cursor-pointer text-white text-lg" id="searchclose">
    <span><Icon name="tabler:x" class="w-12 h-12 ml-0.5 rtl:ml-0 rtl:mr-0.5 md:inline iconbtnclose" /></span>
  </div>
</div>
<header
  class:list={[
    { sticky: isSticky, relative: !isSticky, dark: isDark },
    'top-0 z-40 flex-none mx-auto w-full border-b border-gray-50/0 transition-[opacity] ease-in-out',
  ]}
  {...isSticky ? { 'data-aw-sticky-header': true } : {}}
  {...id ? { id } : {}}
>
  <div class="absolute inset-0"></div>
  <div
    class:list={[
      'relative text-default py-3 px-3 md:px-6 mx-auto w-full md:flex md:justify-between',
      {
        'max-w-7xl': !isFullWidth,
      },
    ]}
  >
    <div class:list={[{ 'mr-auto rtl:mr-0 rtl:ml-auto': position === 'right' }, 'flex justify-between']}>
      <a class="flex items-center" href={getHomePermalink()}>
        <!-- <Image src={logoImage} alt="" width={200} /> -->
        <img src="/images/IF-logo.svg" style="width:315px" alt="intellectual-frontiers-logo" />
      </a>
      <div class="flex items-center md:hidden">
        <Icon
          name="tabler:search"
          class="w-5 h-5 ml-0.5 rtl:ml-0 rtl:mr-0.5 md:inline me-4 cursor-pointer"
          id="searchiconmob"
        />
        <ToggleMenu />
      </div>
    </div>
    <nav
      class="items-center w-full md:w-auto hidden md:flex text-default overflow-y-auto overflow-x-hidden md:overflow-y-visible md:overflow-x-auto md:mx-5"
      aria-label="Main navigation"
    >
      <ul
        class="flex flex-col md:flex-row md:self-center w-full md:w-auto text-xl md:text-[0.9375rem] tracking-[0.01rem] font-medium"
      >
        {
          links.map(({ text, href, links }) => (
            <li class={links?.length ? 'dropdown' : 'hoverTextMenu'}>
              {links?.length ? (
                <>
                  <button class="hover:text-link dark:hover:text-white px-4 py-3 flex items-center hoverTextMenu">
                    {text}{' '}
                    <Icon name="tabler:chevron-down" class="w-3.5 h-3.5 ml-0.5 rtl:ml-0 rtl:mr-0.5 hidden md:inline" />
                  </button>
                  <ul class="dropdown-menu md:backdrop-blur-md dark:md:bg-dark rounded md:absolute pl-4 md:pl-0 md:hidden font-medium md:bg-white md:min-w-[200px] drop-shadow-xl">
                    {links.map(({ text: text2, href: href2 }) => (
                      <li>
                        <a
                          class:list={[
                            'md:hover:bg-gray-100 hover:text-link dark:hover:text-white dark:hover:bg-gray-700 py-2 border-0 px-5 block border-white/90 border-b whitespace-no-wrap hover:border-b hover:border-sky-700',
                            { 'aw-link-active': href2 === currentPath },
                          ]}
                          href={href2}
                        >
                          {text2}
                        </a>
                      </li>
                    ))}
                  </ul>
                </>
              ) : (
                <a
                  class:list={[
                    'hover:text-link dark:hover:text-white px-4 py-3 flex items-centers',
                    { 'aw-link-active': currentPath === href || currentPath.startsWith(href + '/') },
                  ]}
                  href={href}
                >
                  {text}
                </a>
              )}
            </li>
          ))
        }
      </ul>
    </nav>
    <div
      class:list={[
        { 'ml-auto rtl:ml-0 rtl:mr-auto': position === 'left' },
        'hidden md:self-center flex md:flex items-center md:mb-0 fixed w-full md:w-auto md:static justify-end left-0 rtl:left-auto rtl:right-0 bottom-0 p-3 md:p-0',
      ]}
    >
      <div class="items-center flex justify-between w-full md:w-auto">
        <div class="flex items-center">
          <Icon
            name="tabler:search"
            class="w-5 h-5 ml-0.5 rtl:ml-0 rtl:mr-0.5 me-5 hidden md:inline cursor-pointer"
            id="searchicon"
          />
          {showToggleTheme && <ToggleTheme iconClass="w-6 h-6 md:w-5 md:h-5 md:inline-block" />}
          <!-- {
            showRssFeed && (
              <a
                class="text-muted dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center"
                aria-label="RSS Feed"
                href={getAsset('/rss.xml')}
              />
            )
          } -->
        </div>
        <!-- {
          actions?.length ? (
            <span class="ml-4 rtl:ml-0 rtl:mr-4">
              {actions.map((btnProps) => (
                <Button {...btnProps} class="ml-2 py-2.5 px-5.5 md:px-6 font-semibold shadow-none text-sm w-auto" />
              ))}
            </span>
          ) : (
            ''
          )
        } -->
      </div>
    </div>
  </div>
</header>
<script>
  var search = document.getElementById('searchicon');
  var searchmob = document.getElementById('searchiconmob');
  var searchbox = document.getElementById('searchbox');
  var searchclose = document.getElementById('searchclose');
  search.addEventListener('click', searchboxes);
  searchmob.addEventListener('click', searchboxes);
  searchclose.addEventListener('click', searchboxesclose);
  function searchboxes() {
    searchbox.classList.add('activesearch');
    document.body.classList.add('no-scroll');
  }
  function searchboxesclose() {
    searchbox.classList.remove('activesearch');
    document.body.classList.remove('no-scroll');
  }
</script>
