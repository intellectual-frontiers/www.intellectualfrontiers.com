---
import { twMerge } from 'tailwind-merge';
import type { ItemGrid } from '~/types';
import Button from './Button.astro';
import { Icon } from 'astro-icon/components';

const { items = [], columns, defaultIcon = '', classes = {} } = Astro.props as ItemGrid;

const {
  container: containerClass = '',
  panel: panelClass = '',
  title: titleClass = '',
  description: descriptionClass = '',
  icon: defaultIconClass = 'text-primary',
  action: actionClass = '',
} = classes;
---

{
  items && (
    <div
      class={twMerge(
        `grid mx-auto gap-8 md:gap-y-12 ${
          columns === 4
            ? 'lg:grid-cols-4 md:grid-cols-3 sm:grid-cols-2'
            : columns === 3
            ? 'lg:grid-cols-3 sm:grid-cols-2'
            : columns === 2
            ? 'sm:grid-cols-2 '
            : ''
        }`,
        containerClass
      )}
    >
      {items.map(({ title, description, icon, callToAction, classes: itemClasses = {} }) => (
        <div>
         <div class={twMerge('flex flex-col max-w-md', panelClass, itemClasses?.panel)}>
  <div class="flex flex-row items-end">
    {(icon || defaultIcon) && (
      <Icon
        name={icon || defaultIcon}
        class={twMerge('w-7 h-7 mr-2 rtl:mr-0 rtl:ml-2 !mb-1', defaultIconClass, itemClasses?.icon)}
      />
    )}
    {title && <h3 class={twMerge('text-xl font-bold', titleClass, itemClasses?.title)}>{title}</h3>}
  </div>
  
  {description && (
    <div class={twMerge(`${title ? 'mt-3' : ''} text-muted`, descriptionClass, itemClasses?.description)}>
      {Array.isArray(description) ? (
        <ul class="space-y-2 list-disc pl-5 pt-2">
          {description.map((point) => (
            <li class="text-muted">{point}</li>
          ))}
        </ul>
      ) : (
        <p set:html={description} />
      )}
    </div>
  )}
  
  {callToAction && (
    <div
      class={twMerge(
        `${title || description ? 'mt-3' : ''}`,
        actionClass,
        itemClasses?.actionClass
      )}
    >
      <Button variant="link" {...callToAction} />
    </div>
  )}
</div>
        </div>
      ))}
    </div>
  )
}
