---
import { twMerge } from 'tailwind-merge';
import type { ItemGrid } from '~/types';
import Button from './Button.astro';
import { Icon } from 'astro-icon/components';
import { getPermalink } from '../../utils/permalinks';

const { items = [], columns, defaultIcon = '', classes = {} } = Astro.props as ItemGrid;

const {
  container: containerClass = '',
  panel: panelClass = '',
  title: titleClass = '',
  description: descriptionClass = '',
  icon: defaultIconClass = 'text-primary',
  action: actionClass = '',
} = classes;
---

{
  items && (
    <div
      class={twMerge(
        `grid mx-auto gap-1 md:gap-y-2 ${
          columns === 4
            ? 'lg:grid-cols-4 md:grid-cols-3 sm:grid-cols-2'
            : columns === 3
              ? 'lg:grid-cols-3 sm:grid-cols-2'
              : columns === 2
                ? 'sm:grid-cols-2 '
                : ''
        }`,
        containerClass
      )}
    >
      {items.map(({ title, description, icon, link, disclosureId, publishDate,inventor, classes: itemClasses = {} }) => (
        <div class="p-4">
          <div
            class={twMerge(
              'h-full dark:border-gray-600 rounded-sm overflow-hidden shadow-lg bg-white dark:bg-gray-800',
              panelClass,
              itemClasses?.panel
            )}
          >
            <div class="px-6 pt-3 pb-4">
              <h2 class="tracking-widest text-xs title-font font-medium text-gray-600 dark:text-gray-400 mb-2 flex flex-wrap gap-2 pt-2">
                <span class="bg-green-50 dark:bg-green-900/30 text-green-800 dark:text-green-200 text-sm font-medium px-2.5 py-0.5 rounded-sm border border-green-200 dark:border-green-700 inline-flex items-center gap-1">
                  <Icon name="tabler:calendar-month" class="w-3.5 h-3.5" />
                  <time>
                    Publication Date: {publishDate}
                  </time>
                </span>
              
                <span class="bg-gray-800 dark:bg-gray-700 text-white text-sm font-medium px-2.5 py-0.5 rounded-sm border border-gray-600">
                  {disclosureId}
                </span>
              </h2>
              
              <div class="line-clamp-5">
                {title && (
                  <h1 class={twMerge('title-font text-base font-medium text-gray-900 dark:text-white mb-3 font-serif', titleClass, itemClasses?.title)}>
                    <a href={link} class="hover:text-sky-700 dark:hover:text-gray-300 transition ease-in duration-200">
                      {title}
                    </a>
                  </h1>
                )}
                {description && (
                  <p
                    class={twMerge(`${title ? 'leading-relaxed mb-3 text-gray-700 dark:text-gray-300 font-serif' : ''}`, descriptionClass, itemClasses?.description)}
                    set:html={description}
                  />
                )}
              </div>
              {inventor && (
                <div class="mb-2 mt-2">
                  <span class="font-medium text-xs text-gray-700 dark:text-gray-300 block mb-1">
                    {inventor.includes(',') ? 'Authors:' : 'Author:'}
                  </span>
                  <div class="flex flex-wrap">
                    {inventor.split(',').map((author) => (
                      <span class="bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 text-xs font-medium mr-1.5 mb-1.5 px-2 py-0.5 rounded-sm border border-gray-300 dark:border-gray-600">
                        {author.trim()}
                      </span>
                    ))}
                  </div>
                </div>
              )}
              <div class="flex items-center flex-wrap mt-2">
                <a href={link} class="no-underline text-gray-800 dark:text-gray-300 hover:text-sky-700 dark:hover:text-gray-100 inline-flex items-centers">
                  Read the full disclosure
                  <Icon name="tabler:arrow-narrow-right" class="w-7 h-7 ml-2 dark:text-gray-400" />            
                </a>
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
  )
}