---
// ListItem2.astro
import { Icon } from 'astro-icon/components';
import PostTags from '~/components/disclosure/Tags.astro';

import { APP_BLOG } from '~/utils/config';
import type { Post } from '~/types';

import { getPermalink } from '~/utils/permalinks';
import { getFormattedDate } from '~/utils/utils';
import { getPatentFamilyMembers } from '~/utils/disclosure';
import patenturl from '../../../support/patenturls.json';

export interface Props {
  post: Post;
}

const { post } = Astro.props;
const link = APP_BLOG?.post?.isEnabled ? getPermalink(post.permalink, 'post') : '';

// Only fetch family members if patentId exists
const familyMembers = post.patentId 
  ? await getPatentFamilyMembers(post.patentId) 
  : [];

// Determine the href value based on the slug
const getHrefForSlug = (slug: string) => {
  return slug === "defensive-disclosures/agentic-ai-platform-for-configurable-deployment-and-orchestration-of-enterprise-ai-workforce" 
    ? '/' + slug 
    : "#";
};
---

<div class="p-4 md:w-1/2">
  <div class="h-full border border-gray-300 dark:border-gray-600 rounded-sm overflow-hidden shadow-sm bg-white dark:bg-gray-800">
    <div class="px-6 pt-3 pb-4">
      <h2 class="tracking-widest text-sm title-font font-medium text-gray-600 dark:text-gray-400 mb-2 flex flex-wrap gap-2 pt-2">
        <span class="bg-green-50 dark:bg-green-900/30 text-green-800 dark:text-green-200 text-sm font-medium px-2.5 py-0.5 rounded-sm border border-green-200 dark:border-green-700 inline-flex items-center gap-1">
          <Icon name="tabler:calendar-month" class="w-3.5 h-3.5" />
          <time datetime={String(post.publishDate)}>
            Publication Date: {getFormattedDate(post.publishDate)}
          </time>
        </span>
      
        <span class="bg-gray-800 dark:bg-gray-700 text-white text-sm font-medium px-2.5 py-0.5 rounded-sm border border-gray-600">
          {post.disclosureId}
        </span>
      </h2>
      
      <div class="line-clamp-5">
      <h1 class="title-font text-lg font-medium text-gray-900 dark:text-white mb-3 font-serif">
        {link ? (
          <a class="hover:text-sky-700 dark:hover:text-gray-300 transition ease-in duration-200" href={getHrefForSlug(post.slug)}>
            {post.title}
          </a>
        ) : (
          post.title
        )}
      </h1>
      {post.excerpt && <p class="leading-relaxed mb-3 text-gray-700 dark:text-gray-300 font-serif">{post.excerpt}</p>}
    </div>
      {post.disclosureAuthors && post.disclosureAuthors.length > 0 && (
        <div class="mb-2 mt-2">
          <span class="font-medium text-sm text-gray-700 dark:text-gray-300 block mb-2">
            {post.disclosureAuthors.length > 1 ? 'Authors:' : 'Author:'}
          </span>
          <div class="flex flex-wrap">
            {post.disclosureAuthors.map((author) => (
              <span class="bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 text-xs font-medium mr-2 mb-2 px-2.5 py-0.5 rounded-sm border border-gray-300 dark:border-gray-600">
                {author}
              </span>
            ))}
          </div>
        </div>
      )}
      
      {post.patentId && patenturl[post.patentId] && (
        <div class="py-3 text-gray-700 dark:text-gray-300">
          {familyMembers.length === 0 ? 'Related Patent:' : 'Related Patents:'}
          <a class="text-gray-700 dark:text-gray-300 hover:text-sky-700 dark:hover:text-gray-100 underline ml-1" href={"/patents/"+patenturl[post.patentId].url}>
            {post.patentId}
          </a>
          {familyMembers.length > 0 && (
            <>
              ,{familyMembers.map((item, index, arr) => (
                patenturl[item] && (
                  <a 
                    class="text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-gray-100 underline ml-1" 
                    href={"/patents/"+patenturl[item].url}
                  >
                    {item}{index !== arr.length - 1 && <span>,</span>}
                  </a>
                )
              ))}
            </>
          )}
        </div>
      )}
      
      <div class="flex items-center flex-wrap mt-2">
        {link ? (
          <a href={getHrefForSlug(post.slug)} class="no-underline text-gray-800 dark:text-gray-300 hover:text-sky-700 dark:hover:text-gray-100 inline-flex items-centers md:mb-2 lg:mb-0">
            Read the full disclosure
            <Icon name="tabler:arrow-narrow-right" class="w-7 h-7 ml-2 dark:text-gray-400" />            
          </a>
        ) : null}
      </div>
      
      <!-- <div class="border-t border-gray-200 dark:border-gray-700 pt-4">
        <PostTags tags={post.tags} />
      </div> -->
    </div>
  </div>
</div>