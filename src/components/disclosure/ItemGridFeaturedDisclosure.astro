---
import { twMerge } from 'tailwind-merge';
import type { ItemGrid } from '~/types';
import Button from './Button.astro';
import { Icon } from 'astro-icon/components';
import { getPermalink } from '../../utils/permalinks';

const { items = [], columns, defaultIcon = '', classes = {} } = Astro.props as ItemGrid;

const {
  container: containerClass = '',
  panel: panelClass = '',
  title: titleClass = '',
  description: descriptionClass = '',
  icon: defaultIconClass = 'text-primary',
  action: actionClass = '',
} = classes;
---

{
  items && (
    <div
      class={twMerge(
        `grid mx-auto gap-8 md:gap-y-12 ${
          columns === 4
            ? 'lg:grid-cols-4 md:grid-cols-3 sm:grid-cols-2'
            : columns === 3
              ? 'lg:grid-cols-3 sm:grid-cols-2'
              : columns === 2
                ? 'sm:grid-cols-2 '
                : ''
        }`,
        containerClass
      )}
    >
      {items.map(({ title, description, icon, link, disclosureId, patentStatus, classes: itemClasses = {} }) => (
        <div>
          <div
            class={twMerge(
              'grid md:grid-cols-12 gap-4 rounsded-lg shadow-[0_4px_30px_rgba(0,0,0,0.1)] dark:shadow-[0_4px_30px_rgba(0,0,0,0.1)] backdrop-blur border border-[#ffffff29] bg-white dark:bg-slate-900 p-4',
              panelClass,
              itemClasses?.panel
            )}
          >
            {/* <div class=" justify-center md:col-span-5 dark:bg-white">
              {(icon || defaultIcon) && (
                <img
                  class="max-w-full object-fit w-full h-80 object-top p-1 border rounded"
                  src={icon}
                  alt="image description"
                />
              )}
            </div> */}
            <div class="mt-0.5 md:col-span-12 flex flex-col">
              <span class="pb-1">
                <span class="bg-blue-100 text-blue-800 text-xs font-medium me-2 px-2.5 py-0.5 rounded dark:bg-blue-900 dark:text-blue-300">
                  {disclosureId}
                </span>
                {/* <span class="uppercase bg-green-100 text-green-800 text-xs font-medium me-2 px-2.5 py-0.5 rounded dark:bg-green-900 dark:text-green-300">
                  {patentStatus}
                </span> */}
              </span>
              <span class="line-clamp-6">
                {title && (
                  <a href={link} class="hover:text-primary dark:hover:text-blue-700  transition ease-in duration-200">
                    <h3 class={twMerge('text-lg font-bold !leading-7', titleClass, itemClasses?.title)}>{title}</h3>
                  </a>
                )}
                {description && (
                  <p
                    class={twMerge(`${title ? 'mt-2' : ''} text-muted`, descriptionClass, itemClasses?.description)}
                    set:html={description}
                  />
                )}
              </span>
              <a href={link} class="text-[#214EA2] text-sm block mt-auto pt-2">
                Read More
                <Icon name="tabler:arrow-narrow-right" class="w-5 h-5 ml-1 -mr-1.5 rtl:mr-1 rtl:-ml-1.5 inline-block" />
              </a>
              {/* {callToAction && (
                  <div class={twMerge(`${title || description ? 'mt-3' : ''}`, actionClass, itemClasses?.actionClass)}>
                    <Button variant="link" {...callToAction} />
                  </div>
                )} */}
            </div>
          </div>
        </div>
      ))}
    </div>
  )
}
