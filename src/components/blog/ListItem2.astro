---
//New component with missing fields added

// import type { ImageMetadata } from 'astro';
import { Icon } from 'astro-icon/components';
// import Image from '~/components/common/Image.astro';
import PostTags from '~/components/blog/Tags.astro';

import { APP_BLOG } from '~/utils/config';
import type { Post } from '~/types';

import { getPermalink } from '~/utils/permalinks';
// import { findImage } from '~/utils/images';
import { getFormattedDate } from '~/utils/utils';

export interface Props {
  post: Post;
}

const { post } = Astro.props;
// const image = (await findImage(post.image)) as ImageMetadata | undefined;

const link = APP_BLOG?.post?.isEnabled ? getPermalink(post.permalink, 'post') : '';
---

<div class="p-4 md:w-1/2">
  <div
    class="h-full border border-gray-300 dark:border-gray-600 rounded-sm overflow-hidden shadow-sm bg-white dark:bg-gray-800"
  >
    <!-- Image section - commented out for now, uncomment if needed in future
    {
      image && (
        <a class="relative block group" href={link ?? 'javascript:void(0)'}>
          <div class="relative h-48 md:h-56 overflow-hidden bg-gray-400 dark:bg-slate-700">
            <Image
              src={image}
              class="absolute inset-0 object-cover w-full h-full group-hover:scale-105 transition-transform duration-300"
              widths={[400, 900]}
              width={900}
              sizes="(max-width: 900px) 400px, 900px"
              alt={post.title}
              aspectRatio="16:9"
              loading="lazy"
              decoding="async"
            />
          </div>
        </a>
      )
    }
    -->

    <div class="px-6 pt-3 pb-4">
      <h2
        class="tracking-widest text-sm title-font font-medium text-gray-600 dark:text-gray-400 mb-2 flex flex-wrap gap-2 pt-2"
      >
        <span
          class="bg-blue-50 dark:bg-blue-900/30 text-blue-800 dark:text-blue-200 text-sm font-medium px-2.5 py-0.5 rounded-sm border border-blue-200 dark:border-blue-700 inline-flex items-center gap-1"
        >
          <Icon name="tabler:calendar-month" class="w-3.5 h-3.5" />
          <time datetime={String(post.publishDate)}>
            {getFormattedDate(post.publishDate)}
          </time>
        </span>

        {
          post.patentId && (
            <span class="bg-gray-800 dark:bg-gray-700 text-white text-sm font-medium px-2.5 py-0.5 rounded-sm border border-gray-600">
              {post.patentId}
            </span>
          )
        }

        {
          post.patentStatus && (
            <span class="uppercase bg-green-100 text-green-800 text-sm font-medium px-2.5 py-0.5 rounded-sm border border-green-200 dark:bg-green-900 dark:text-green-300 dark:border-green-700">
              {post.patentStatus}
            </span>
          )
        }
      </h2>

      <div class="line-clamp-5">
        <h1 class="title-font text-lg font-medium text-gray-900 dark:text-white mb-3 font-serif">
          {
            link ? (
              <a class="hover:text-sky-700 dark:hover:text-gray-300 transition ease-in duration-200" href={link}>
                {post.title}
              </a>
            ) : (
              post.title
            )
          }
        </h1>
        {post.excerpt && <p class="leading-relaxed mb-3 text-gray-700 dark:text-gray-300 font-serif">{post.excerpt}</p>}
      </div>

      {
        post.author && (
          <div class="mb-2 mt-2">
            <span class="font-medium text-sm text-gray-700 dark:text-gray-300 block mb-2">Author:</span>
            <div class="flex flex-wrap">
              <span class="bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 text-xs font-medium mr-2 mb-2 px-2.5 py-0.5 rounded-sm border border-gray-300 dark:border-gray-600">
                {post.author}
              </span>
            </div>
          </div>
        )
      }

      {
        post.inventor && (
          <div class="mb-2 mt-2">
            <span class="font-medium text-sm text-gray-700 dark:text-gray-300 block mb-2">Inventor:</span>
            <div class="flex flex-wrap">
              <span class="bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 text-xs font-medium mr-2 mb-2 px-2.5 py-0.5 rounded-sm border border-gray-300 dark:border-gray-600">
                {post.inventor}
              </span>
            </div>
          </div>
        )
      }

      <div class="flex items-center flex-wrap mt-2">
        {
          link ? (
            <a
              href={link}
              class="no-underline text-gray-800 dark:text-gray-300 hover:text-sky-700 dark:hover:text-gray-100 inline-flex items-centers md:mb-2 lg:mb-0"
            >
              Read more
              <Icon name="tabler:arrow-narrow-right" class="w-7 h-7 ml-2 dark:text-gray-400" />
            </a>
          ) : null
        }
      </div>

      {
        (() => {
          if (!post.tags || post.tags.length === 0) return false;

          // Filter tags using the same logic as the Tags component
          const renderableTags = post.tags.filter((tag) => {
            const patentNumberPattern = /^[A-Za-z]+\d+[A-Za-z]+\d+$/;
            const isPatentNumber = patentNumberPattern.test(tag);
            const documentIdPattern = /^NA-\d+$/i;
            const isDocumentId = documentIdPattern.test(tag);
            return !isPatentNumber && !isDocumentId;
          });

          return renderableTags.length > 0;
        })() && (
          <div class="border-t border-gray-200 dark:border-gray-700 pt-4 mt-4">
            <PostTags tags={post.tags} />
          </div>
        )
      }
    </div>
  </div>
</div>
